package com.example.design_model.t10_Flyweight;

/**
 * @author LuoXianchao
 * @since 2023/05/02 16:43
 */
public class Main {
}

/**
 * 共享对象模式
 * 享元模式（蝇量模式）：运用共享技术有效的支持大量细粒度的对象
 * 1、常用于系统的底层开发，解决系统的性能问题。如数据库连接池、线程池等等，里面都是创建好的对象，在我们需要用这些对象的时候，
 *      直接到池中获取对象即可，无需再次创建对象，如果没有我们需要的对象则直接创建一个对象
 * 2、享元模式能够解决重复对象的内存浪费问题，当系统中有大量相似对象时，创建一个缓冲池，这时就不需要总是创建销毁对象，
 *      可以直接从缓冲池里面获取对应的对象，以降低创建销毁对象带来的系统消耗。
 * 3、享元模式经典的应用就是池技术，常量池、线程池、数据库连接池。。。
 *
 * 享元模式提出了两个要求：细粒度和共享内存，将对象的信息分为两个部分：内部状态和外部状态
 *  1、内部状态：指对象共享出来的信息，存储在享元对象内部且不会随环境的改变而改变（每一个享元对象的该值都是一样的）
 *  2、外部状态：指对象得以依赖的一个标记，时随环境改变而改变的、不可共享的状态（每一个享元对象的该值都是不同的）
 *
 */






