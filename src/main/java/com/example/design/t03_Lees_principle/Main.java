package com.example.design.t03_Lees_principle;

/**
 * 里氏替换原则
 * @author LuoXianchao
 * @since 2023/4/21 20:40
 */
public class Main  {
/**
 *里氏替换原则
 *  如果对每个类型为T1的对象o1，都有类型为T2的对象o2，使得以T1定义的所有程序P在所有的对象o1都代换的o2时，
 *  程序p的行为没有发送变化（T1被T2继承时，原来T1的方法没变过，内部还是那样去执行，才能完美替换），
 *  那么类型T2时类型T1的子类型（T2 extends T1），换句话说，所有引用基类的地方必须能透明的使用其子类的对象（多态）
 *
 * 在使用继承时，应当遵循里氏替换原则，在子类中尽量不要重写父类的方法
 * 里氏替换原则告诉我们，继承实际上使得两个类耦合性增强了，在适当情况下，可以通过聚合，组合，依赖来解决问题
 *
 */
}
