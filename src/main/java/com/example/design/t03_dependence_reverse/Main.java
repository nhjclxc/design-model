package com.example.design.t03_dependence_reverse;

/**
 * @author LuoXianchao
 * @since 2023/4/20 20:38
 */
public class Main {
    /**
     * 依赖倒置原则：我们要去依赖抽象的东西而不是具体的实现类，尽量把依赖由具体的实现类转变为抽象的接口
     * 1.高层模块不应该依赖底层模块，二者都应该依赖其抽象
     *      （高层底层值的是实现，底层比高层更具体实现（也可以理解为底层是从高层模块来的））
     * 2.抽象不应该依赖细节，细节应该依赖抽象（接口不依赖实现，实现应该依赖接口）
     * 3.依赖倒置的中心思想就是面向接口编程
     * 4.依赖倒置设计理念：
     *      相对于细节的多变性，抽象的东西要稳定得多，以抽象为基础搭建的架构比以细节搭建的架构稳定
     *      在Java中，抽象指的是接口或抽象类，细节指的是前者的实现类
     * 5.使用接口或抽象类的目的时制定规范，而不设计具体的实现方式，把细节的实习交给抽象的具体实现
     *
     */
}









